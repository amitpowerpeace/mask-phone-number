{"version":3,"sources":["Card.js","Container.js","Form.js","MainContainer.js","index.js"],"names":["style","border","padding","marginBottom","backgroundColor","cursor","Card","id","text","index","moveCard","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","isDragging","opacity","drag","data-handler-id","width","Container","useState","cards","setCards","phone","setPhone","error","setError","normalizeInput","value","previousValue","currentValue","replace","cvLength","length","slice","useCallback","dragCard","update","$splice","map","card","i","renderCard","className","onSubmit","e","preventDefault","validateInput","newItems","newArray","unshift","name","placeholder","onChange","target","prevState","onClick","Form","state","handleChange","setState","handleSubmit","props","onSubmitForm","setTimeout","alert","JSON","stringify","handleReset","this","Component","MainContainer","context","count","onDragEnd","result","console","log","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","newItem","content","v","k","droppableId","droppableProvided","droppableSnapshot","innerRef","isDraggingOver","background","draggableId","draggableProvided","draggableSnapshot","draggableProps","dragHandleProps","draggableStyle","userSelect","grid","margin","App","isHook","setIsHook","isHookText","setIsHookText","borderRadius","DndProvider","backend","HTML5Backend","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.43849fcf.chunk.js","sourcesContent":["import { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nconst style = {\n  border: \"1px dashed gray\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"move\"\n};\nexport const Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null);\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"card\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      const clientOffset = monitor.getClientOffset();\n\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      moveCard(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  });\n  const [{ isDragging }, drag] = useDrag({\n    type: \"card\",\n    item: () => {\n      return { id, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return (\n    <div ref={ref} style={{ ...style, opacity }} data-handler-id={handlerId}>\n      {text}\n    </div>\n  );\n};\n","import { useState, useCallback } from \"react\";\nimport { Card } from \"./Card\";\nimport update from \"immutability-helper\";\nimport \"./style.css\";\nconst style = {\n  width: 400\n};\nfunction Container() {\n  const [cards, setCards] = useState([\n    {\n      id: 1,\n      text: \"(232) 145-2323\"\n    },\n    {\n      id: 2,\n      text: \"(232) 323-2323\"\n    },\n    {\n      id: 3,\n      text: \"(232) 123-2323\"\n    },\n    {\n      id: 4,\n      text: \"(232) 456-2323\"\n    },\n    {\n      id: 5,\n      text: \"(232) 789-2323\"\n    }\n  ]);\n\n  const [phone, setPhone] = useState({ phone: \"\" });\n  const [error, setError] = useState({ error: \"\" });\n\n  const handleChange = ({ target: { value } }) => {\n    setPhone((prevState) => ({\n      phone: normalizeInput(value, prevState.phone)\n    }));\n  };\n\n  const normalizeInput = (value, previousValue) => {\n    if (!value) return value;\n    const currentValue = value.replace(/[^\\d]/g, \"\");\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n      if (cvLength < 4) return currentValue;\n      if (cvLength < 7)\n        return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n        3,\n        6\n      )}-${currentValue.slice(6, 10)}`;\n    }\n  };\n\n  const validateInput = (value) => {\n    let error = false;\n\n    if (!value) error = \"Required!\";\n    else if (value.length !== 14)\n      error = \"Invalid phone format. ex: (000) 000-0000\";\n\n    return error;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const error = validateInput(phone.phone);\n\n    let newItems = {\n      id: cards.length + 1,\n      text: phone.phone\n    };\n\n    const newArray = cards.slice();\n    newArray.unshift(newItems);\n\n    if (!error) {\n      setCards(newArray);\n      setPhone({ phone: \"\" });\n      /* setCards((prevItems) => [\n        ...prevItems,\n        {\n          id: prevItems.length + 1,\n          text: phone.phone\n        }\n      ]); */\n    }\n\n    /* setError({ error }, () => {\n      if (!error) {\n        setTimeout(() => {\n          alert(JSON.stringify(phone, null, 4));\n        }, 300);\n      }\n    }); */\n  };\n\n  const handleReset = () => {\n    setPhone({ phone: {} });\n    setError({ error: \"\" });\n  };\n\n  const moveCard = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragCard = cards[dragIndex];\n      setCards(\n        update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard]\n          ]\n        })\n      );\n    },\n    [cards]\n  );\n  const renderCard = (card, index) => {\n    return (\n      <Card\n        key={card.id}\n        index={index}\n        id={card.id}\n        text={card.text}\n        moveCard={moveCard}\n      />\n    );\n  };\n  return (\n    <>\n      <div style={style}>\n        {cards && cards.map((card, i) => renderCard(card, i))}\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"input-container\">\n            <p className=\"label\">Phone:</p>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"(xxx) xxx-xxxx\"\n              value={phone.phone}\n              onChange={handleChange}\n            />\n            {error && <p className=\"error\">{error.error}</p>}\n          </div>\n          <div className=\"btn-container\">\n            <button className=\"btn danger\" type=\"button\" onClick={handleReset}>\n              Reset\n            </button>\n            <button className=\"btn primary\" type=\"submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\nexport default Container;\n","import React, { Component } from \"react\";\r\n\r\nconst normalizeInput = (value, previousValue) => {\r\n  if (!value) return value;\r\n  const currentValue = value.replace(/[^\\d]/g, \"\");\r\n  const cvLength = currentValue.length;\r\n\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    if (cvLength < 4) return currentValue;\r\n    if (cvLength < 7)\r\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\r\n    return `(${currentValue.slice(0, 3)}) ${currentValue.slice(\r\n      3,\r\n      6\r\n    )}-${currentValue.slice(6, 10)}`;\r\n  }\r\n};\r\n\r\nconst validateInput = (value) => {\r\n  let error = \"\";\r\n\r\n  if (!value) error = \"Required!\";\r\n  else if (value.length !== 14)\r\n    error = \"Invalid phone format. ex: (555) 555-5555\";\r\n\r\n  return error;\r\n};\r\n\r\nclass Form extends Component {\r\n  state = { phone: \"\", error: \"\" };\r\n\r\n  handleChange = ({ target: { value } }) => {\r\n    this.setState((prevState) => ({\r\n      phone: normalizeInput(value, prevState.phone)\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const error = validateInput(this.state.phone);\r\n\r\n    if (!error) {\r\n      this.props.onSubmitForm(this.state.phone);\r\n    }\r\n\r\n    this.setState({ error }, () => {\r\n      if (!error) {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(this.state, null, 4));\r\n        }, 300);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ phone: \"\", error: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <p className=\"label\">Phone:</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"(xxx) xxx-xxxx\"\r\n            value={this.state.phone}\r\n            onChange={this.handleChange}\r\n          />\r\n          {this.state.error && <p className=\"error\">{this.state.error}</p>}\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <button\r\n            className=\"btn danger\"\r\n            type=\"button\"\r\n            onClick={this.handleReset}\r\n          >\r\n            Reset\r\n          </button>\r\n          <button className=\"btn primary\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Form from \"./Form\";\r\nimport \"./style.css\";\r\n\r\nconst getItems = (count) => \r\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n    id: `item-${k}`,\r\n    content: `item ${k}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 4;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  background: isDragging ? \"yellow\" : \"white\",\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"grey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nexport default class MainContainer extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      items: getItems(5)\r\n    };\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    console.log(result);\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items\r\n    });\r\n  };\r\n  onSubmitForm = (newItem) => {\r\n    let newItems = {\r\n      id: this.state.items.length + 1,\r\n      content: newItem\r\n    };\r\n\r\n    const newArray = this.state.items.slice();\r\n    newArray.unshift(newItems);\r\n    this.setState({ items: newArray });\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n    return (\r\n      <div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\">\r\n            {(droppableProvided, droppableSnapshot) => (\r\n              <div\r\n                ref={droppableProvided.innerRef}\r\n                style={getListStyle(droppableSnapshot.isDraggingOver)}\r\n              >\r\n                {items &&\r\n                  items.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(draggableProvided, draggableSnapshot) => (\r\n                        <div\r\n                          ref={draggableProvided.innerRef}\r\n                          {...draggableProvided.draggableProps}\r\n                          {...draggableProvided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            draggableSnapshot.isDragging,\r\n                            draggableProvided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          {item.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                {droppableProvided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <Form onSubmitForm={this.onSubmitForm} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { render } from \"react-dom\";\nimport Container from \"./Container\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport MainContainer from \"./MainContainer\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nfunction App() {\n  const [isHook, setIsHook] = useState(false);\n  const [isHookText, setIsHookText] = useState(\"Without Hook\");\n  const isToggleHook = () => {\n    setIsHook(!isHook);\n    setIsHookText(!isHook ? \"With Hook\" : \"WithOut Hook\");\n  };\n  return (\n    <div>\n      <div className=\"App\">\n        <span\n          style={{\n            padding: \"5px\",\n            borderRadius: \"5px\",\n            border: \"1px solid gray\"\n          }}\n        >\n          List of US phone numbers\n        </span>\n        <button className=\"btn primary\" onClick={isToggleHook}>\n          {isHookText}\n        </button>\n      </div>\n      <div className=\"App\">\n        {!isHook ? (\n          <DndProvider backend={HTML5Backend}>\n            <Container />\n          </DndProvider>\n        ) : (\n          <MainContainer />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}